name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: pip install -e . -r requirements-dev.txt
      - name: Install CycloneDX Python SBOM Tool
        run: |
          python -m pip install cyclonedx-bom
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Generate SBOM
        run: cyclonedx-py requirements -i requirements.txt -o sbom.xml
      - uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.xml
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: ${{ runner.os }}-precommit-
      - run: pre-commit run --all-files --show-diff-on-failure
      - run: pip-audit -r requirements.txt --format columns
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        if: ${{ env.SNYK_TOKEN != '' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false) }}
        run: snyk test
      - run: pytest --cov=. --cov-report=term-missing --cov-report=xml --cov-fail-under=90
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
      - name: Upload Railway logs
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_SERVICE: ${{ secrets.RAILWAY_SERVICE }}
          RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT }}
        run: |
          mkdir -p logs
          npx railway logs --service "$RAILWAY_SERVICE" --project "$RAILWAY_PROJECT" --env production --json > logs/latest_railway.log
        continue-on-error: true
      - uses: actions/upload-artifact@v4
        with:
          name: railway-logs
          path: logs/latest_railway.log
